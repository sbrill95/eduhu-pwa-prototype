name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Frontend Testing Job
  frontend-test:
    runs-on: ubuntu-latest
    name: Frontend Tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run ESLint
        run: |
          cd frontend
          npm run lint

      - name: Run Prettier check
        run: |
          cd frontend
          npm run format:check

      - name: Run TypeScript check
        run: |
          cd frontend
          npm run build

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test:run

      - name: Run frontend tests with coverage
        run: |
          cd frontend
          npm run test:coverage

      - name: Upload frontend coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: frontend
          directory: ./frontend/coverage

  # Backend Testing Job
  backend-test:
    runs-on: ubuntu-latest
    name: Backend Tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Run TypeScript check
        run: |
          cd backend
          npm run build

      - name: Run backend tests
        run: |
          cd backend
          npm run test:ci

      - name: Upload backend coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: backend
          directory: ./backend/coverage

  # E2E Testing Job
  e2e-test:
    runs-on: ubuntu-latest
    name: E2E Tests
    needs: [frontend-test, backend-test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Build backend
        run: |
          cd backend
          npm run build

      - name: Run Playwright tests
        run: npm run test:e2e

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # Build Job (only on main branch)
  build:
    runs-on: ubuntu-latest
    name: Build Application
    needs: [frontend-test, backend-test, e2e-test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Build all projects
        run: npm run build:all

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            frontend/dist/
            backend/dist/
          retention-days: 7