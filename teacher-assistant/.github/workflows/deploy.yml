name: Deploy to Production

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  # Deploy to staging first
  deploy-staging:
    runs-on: ubuntu-latest
    name: Deploy to Staging
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: Run full test suite
        run: npm run test:all

      - name: Build applications
        run: npm run build:all

      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add your staging deployment commands here
          # Example: rsync, docker build/push, etc.

      - name: Run smoke tests on staging
        run: |
          echo "Running smoke tests on staging..."
          # Add staging smoke test commands

  # Deploy to production (requires manual approval)
  deploy-production:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: deploy-staging
    environment: production
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: Build applications
        run: npm run build:all

      - name: Deploy to production
        run: |
          echo "Deploying to production environment..."
          # Add your production deployment commands here
          # Example:
          # - Deploy to cloud provider (AWS, Azure, GCP)
          # - Update container registry
          # - Deploy with Kubernetes
          # - Deploy to CDN

      - name: Run production smoke tests
        run: |
          echo "Running smoke tests on production..."
          # Add production smoke test commands

      - name: Create deployment notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          text: 'Deployment to production ${{ job.status }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Rollback job (manual trigger)
  rollback:
    runs-on: ubuntu-latest
    name: Rollback Deployment
    if: github.event_name == 'workflow_dispatch'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rollback deployment
        run: |
          echo "Rolling back deployment..."
          # Add rollback commands here

      - name: Verify rollback
        run: |
          echo "Verifying rollback..."
          # Add verification commands